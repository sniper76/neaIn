<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userCmpny">

	<select id="selectUserCmpnyInfoListAjax" resultType="UserCmpnyBean" parameterType="UserCmpnyBean">
		SELECT
		${totalCount} - ((${pageNo} - 1) * ${length}) - (@ROWNUM := @ROWNUM + 1) + 1 AS ROW_NUM
		, TAB.COMPNY_SEQ
		, TAB.COMPNY_NM
		, TAB.COMPNY_TYPE_NM
		, TAB.USER_ID
		, TAB.JC_CD
		, TAB.REG_NUM
		, TAB.PATENT_NUM
		, TAB.OWNER_NATION_NM
		, TAB.EMPLOYEE_TOT_CNT
		, TAB.FEMALE_EMPLOYEE_TOT_CNT
		, TAB.DISABL_EMPLOYEE_TOT_CNT
		, TAB.FORGNER_TOT_CNT
		, TAB.MAIN_JOB_NM
		, TAB.MAIN_JOB_PERCENT
		, TAB.ADDR_DTL
		, TAB.ADDR_CD
		, TAB.LNGTD
		, TAB.LATTD
		, TAB.PROFILE
		, TAB.REG_USER_SEQ
		, TAB.REG_DT
		, TAB.MOD_USER_SEQ
		, TAB.MOD_DT
		, TAB.COMPNY_ID
		, TAB.USER_SEQ
		, TAB.ISIC_CD
		, TAB.FILE_GRP_SEQ
		, TAB.ISCO_CD
		, TAB.BKMK_CNT
		, TAB.JC_USER_SEQ
		, TAB.LIKE_CNT
		, TAB.MNGER_NM
		, TAB.MNGER_POSITION
		, TAB.MNGER_CELL
		, TAB.MNGER_EMAIL
		, TAB.MNGER_TEL
		, TAB.COMPNY_FAX
		, TAB.COMPNY_WEBSITE
		, TAB.COMPNY_FACEBOOK
		, TAB.USE_YN
		, TAB.DEL_YN
		, TAB.USER_STS_NM
		, TAB.ORDER_BY
		FROM (
				SELECT 
				A.COMPNY_SEQ
				, CASE WHEN #{lang} = 'kh' THEN A.COMPNY_NM_KH ELSE A.COMPNY_NM_EN END COMPNY_NM
				, FN_GET_COMMON_NM('COMPNY_TYPE_CD', A.COMPNY_TYPE_CD, #{lang}) AS COMPNY_TYPE_NM
				, A.USER_ID
				, A.JC_CD
				, A.REG_NUM
				, A.PATENT_NUM
				, FN_GET_COMMON_NM('OWNER_NATION_CD', A.OWNER_NATION_CD, #{lang}) AS OWNER_NATION_NM
				, A.EMPLOYEE_TOT_CNT
				, A.FEMALE_EMPLOYEE_TOT_CNT
				, A.DISABL_EMPLOYEE_TOT_CNT
				, A.FORGNER_TOT_CNT
				, A.MAIN_JOB_NM
				, A.MAIN_JOB_PERCENT
				, A.ADDR_DTL
				, A.ADDR_CD
				, A.LNGTD
				, A.LATTD
				, A.PROFILE
				, A.REG_USER_SEQ
				, FN_GET_BASE_DATE_CHAR(A.REG_DT, #{lang}) AS REG_DT 
				, A.MOD_USER_SEQ
				, FN_GET_BASE_DATE_CHAR(A.MOD_DT, #{lang}) AS MOD_DT 
				, A.COMPNY_ID
				, A.USER_SEQ
				, A.ISIC_CD
				, A.FILE_GRP_SEQ
				, A.ISCO_CD
				, A.BKMK_CNT
				, A.JC_USER_SEQ
				, A.LIKE_CNT
				, A.MNGER_NM
				, A.MNGER_POSITION
				, A.MNGER_CELL
				, A.MNGER_EMAIL
				, A.MNGER_TEL
				, A.COMPNY_FAX
				, A.COMPNY_WEBSITE
				, A.COMPNY_FACEBOOK
				, A.USE_YN
				, A.DEL_YN
				, FN_GET_COMMON_NM('USER_STS_CD', B.USER_STS_CD, #{lang}) AS USER_STS_NM 
				, A.REG_DT AS ORDER_BY
				FROM CPES_COMPNY A
				, CPES_USER B
				<where>
				    AND A.USER_SEQ          		= B.USER_SEQ
				    AND B.USER_AUTH_CD				= 'ROLE_CMPNY'
					<if test="jcCd != null and jcCd != ''">
					AND A.JC_CD						LIKE CONCAT('%', #{jcCd}, '%') 
					</if>			
					<if test="lang == 'kh' and compnyNmKh != null and compnyNmKh != ''">
					AND A.COMPNY_NM_KH				LIKE CONCAT('%', #{compnyNm}, '%') 
					</if>
					<if test="lang != 'kh' and compnyNmEn != null and compnyNmEn != ''">
					AND A.COMPNY_NM_EN				LIKE CONCAT('%', #{compnyNm}, '%') 
					</if>
					<if test="mngerEmail != null and mngerEmail != ''">
					AND A.MNGER_EMAIL				LIKE CONCAT('%', #{mngerEmail}, '%') 
					</if>
					<if test="mngerCell != null and mngerCell != ''">
					AND A.MNGER_CELL				LIKE CONCAT('%', #{mngerCell}, '%') 
					</if>
					<if test="isicCd != null and isicCd != ''">
					AND A.ISIC_CD					LIKE CONCAT('%', #{isicCd}, '%') 
					</if>						
					<if test="userStsCd != null and userStsCd != ''">
					AND B.USER_STS_CD				LIKE CONCAT('%', #{userStsCd}, '%')
					</if>											
					<if test="startDate != null and startDate != ''">
					<![CDATA[
					AND A.REG_DT			>= FN_GET_STR_TO_DATE(#{startDate}, 'S')
					]]>
					</if>
					<if test="endDate != null and endDate != ''">
					<![CDATA[			
					AND A.REG_DT			<= FN_GET_STR_TO_DATE(#{endDate}, 'E')
					]]>
					</if>
					AND A.DEL_YN			!= 'Y'
					AND A.USE_YN			= 'Y'													
				</where>
		) TAB
		, (SELECT @ROWNUM := 0) Z
		<choose>
        	<when test="orderColumn == 'REG_DT'">
               	ORDER BY TAB.ORDER_BY ${orderColumnSort}
            </when>
            <otherwise>
            	ORDER BY ${orderColumn} ${orderColumnSort}
            </otherwise>
        </choose>		
		<if test="length > -1">
		LIMIT 
			${start} , ${length}				
		</if>
            
    </select>
    
    <select id="selectIsicCdList" resultType="UserCmpnyIsicBean" parameterType="UserCmpnyIsicBean">
		SELECT
		ISIC_ID AS ISIC_CD
		, CASE WHEN '' = 'kh' THEN KH_NM ELSE EN_NM END ISIC_NM
		FROM CPES_ISIC_CD
		WHERE 1 = 1
		AND LVL = 1
		ORDER BY ISIC_ID ASC 
		;   
    </select>
    
	<select id="selectUserCmpnyInfoListTotalCnt" resultType="java.lang.Integer" parameterType="UserCmpnyBean">
       	SELECT COUNT(*) AS TOTAL_COUNT
		FROM CPES_COMPNY A
		, CPES_USER B
		<where>
		    AND A.USER_SEQ          		= B.USER_SEQ
		    AND B.USER_AUTH_CD				= 'ROLE_CMPNY'
			<if test="jcCd != null and jcCd != ''">
			AND A.JC_CD						LIKE CONCAT('%', #{jcCd}, '%') 
			</if>			
			<if test="lang == 'kh' and compnyNm != null and compnyNm != ''">
			AND A.COMPNY_NM_KH				LIKE CONCAT('%', #{compnyNm}, '%') 
			</if>
			<if test="lang != 'kh' and compnyNm != null and compnyNm != ''">
			AND A.COMPNY_NM_EN				LIKE CONCAT('%', #{compnyNm}, '%') 
			</if>
			<if test="mngerEmail != null and mngerEmail != ''">
			AND A.MNGER_EMAIL				LIKE CONCAT('%', #{mngerEmail}, '%') 
			</if>
			<if test="mngerCell != null and mngerCell != ''">
			AND A.MNGER_CELL				LIKE CONCAT('%', #{mngerCell}, '%') 
			</if>	
			<if test="isicCd != null and isicCd != ''">
				AND A.ISIC_CD					LIKE CONCAT('%', #{isicCd}, '%') 
			</if>						
			<if test="userStsCd != null and userStsCd != ''">
			AND B.USER_STS_CD				LIKE CONCAT('%', #{userStsCd}, '%')
			</if>											
			<if test="startDate != null and startDate != ''">
			<![CDATA[
			AND A.REG_DT			>= FN_GET_STR_TO_DATE(#{startDate}, 'S')
			]]>
			</if>
			<if test="endDate != null and endDate != ''">
			<![CDATA[			
			AND A.REG_DT			<= FN_GET_STR_TO_DATE(#{endDate}, 'E')
			]]>
			</if>												
		</where>		
    </select>
    
	<select id="selectUserCmpnyDtlInfoMain" resultType="UserCmpnyBean" parameterType="UserCmpnyBean">
       	SELECT
       	A.COMPNY_SEQ
       	, B.USER_SEQ
       	, CASE WHEN #{lang} = 'kh' THEN A.COMPNY_NM_KH ELSE A.COMPNY_NM_EN END COMPNY_NM
       	, A.REG_NUM
       	, A.JC_CD
       	, FN_GET_JOB_CNTR_NM(A.JC_CD, #{lang}) AS JC_NM
       	, FN_GET_COMMON_NM('COMPNY_TYPE_CD', A.COMPNY_TYPE_CD, #{lang}) AS COMPNY_TYPE_NM
       	, A.MNGER_NM
       	, A.MNGER_EMAIL
       	, A.MNGER_CELL
       	, A.ADDR_DTL
       	, A.BKMK_CNT
       	, A.LIKE_CNT
       	, FN_GET_FILE_PATH(A.FILE_GRP_SEQ) AS FILE_PATH
       	FROM CPES_COMPNY A
       	INNER JOIN CPES_USER B
       	ON A.USER_SEQ          		= B.USER_SEQ
       	LEFT JOIN CPES_JOB_CENTER C
		ON A.JC_CD					= C.JC_CD
		<where>
		    AND B.USER_AUTH_CD				= 'ROLE_CMPNY'
			AND A.COMPNY_SEQ				= #{compnySeq}					
		</where>		
    </select>
    
	<select id="selectUserCmpnyDtlInfoBaseAjax" resultType="UserCmpnyBean" parameterType="UserCmpnyBean">
       	SELECT
       	A.COMPNY_SEQ
       	, B.USER_SEQ
       	, CASE WHEN #{lang} = 'kh' THEN A.COMPNY_NM_KH ELSE A.COMPNY_NM_EN END COMPNY_NM
       	, A.COMPNY_NM_KH
       	, A.COMPNY_NM_EN
       	, FN_GET_COMMON_NM('COMPNY_TYPE_CD', A.COMPNY_TYPE_CD, #{lang}) AS COMPNY_TYPE_NM
       	, FN_GET_COMMON_NM('USER_STS_CD', B.USER_STS_CD, #{lang}) AS USER_STS_NM  
       	, CASE WHEN #{lang} = 'kh' THEN C.KH_NM ELSE C.EN_NM END ISIC_NM
       	, A.REG_NUM
       	, A.PATENT_NUM
       	, A.OWNER_NATION_CD
       	, ROUND(A.EXE_EMPLOYEE_TOT_CNT / A.EMPLOYEE_TOT_CNT * 100, 2) AS EXE_EMPLOYEE_RATE
       	, A.ADDR_DTL
       	, A.MNGER_NM
       	, A.MNGER_POSITION
       	, A.MNGER_CELL
       	, A.MNGER_EMAIL
       	, A.MNGER_TEL
       	, A.COMPNY_FAX
       	, A.COMPNY_WEBSITE
       	, B.SMS_NTCE_AGREE_YN
       	, B.EMAIL_NTCE_AGREE_YN
       	FROM CPES_COMPNY A
       	INNER JOIN CPES_USER B
       	ON A.USER_SEQ          		= B.USER_SEQ
       	LEFT JOIN CPES_ISIC_CD C
       	ON A.ISIC_CD				= C.ISIC_ID
       	AND LVL						= 1
		<where>
		    AND B.USER_AUTH_CD				= 'ROLE_CMPNY'
			AND A.COMPNY_SEQ				= #{compnySeq}
		</where>		
    </select>
    
	<select id="selectUserCmpnyDtlInfoProfileAjax" resultType="UserCmpnyBean" parameterType="UserCmpnyBean">
       	SELECT
       	COMPNY_SEQ
       	, PROFILE
       	, COMPNY_HIS
       	FROM CPES_COMPNY
		<where>
			AND COMPNY_SEQ				= #{compnySeq}
		</where>		
    </select>
                 
	<select id="selectUserCmpnyDtlInfoVccyList" resultType="UserCmpnyVccyBean" parameterType="UserCmpnyVccyBean">
		SELECT
		${totalCount} - ((${pageNo} - 1) * ${length}) - (@ROWNUM := @ROWNUM + 1) + 1 AS ROW_NUM
		, TAB.COMPNY_SEQ
		, TAB.VACANCY_SEQ
		, TAB.EMPLOY_FORM_CD
		, TAB.VACANCY_TYPE_NM
		, TAB.VACANCY_TITLE
		, TAB.VACANCY_TERM
		, TAB.JC_AGREE_YN
		, TAB.REG_DT
		, TAB.VACANCY_CLOSE_DT
		, TAB.VACANCY_STS_CD
		, TAB.VACANCY_STS_NM
		, TAB.RECRUMT_MEMB
		, TAB.APPLIC_TOT_CNT
		, TAB.RESUME_NOT_OPEN_CNT
		, TAB.RESUME_CHK_CNT
		, TAB.RESUME_PASS_CNT
		, TAB.PASS_CNT
		, TAB.BKMK_CNT
		, TAB.VIEW_CNT
		, TAB.ORDER_BY		
		FROM (
				SELECT 
				A.COMPNY_SEQ
				, A.VACANCY_SEQ
				, A.VACANCY_ID
				, A.EMPLOY_FORM_CD
				, FN_GET_COMMON_NM('EMPLOY_FORM_CD', A.EMPLOY_FORM_CD, #{lang}) AS VACANCY_TYPE_NM
				, A.VACANCY_TITLE
				, CONCAT(FN_GET_BASE_DATE_CHAR(A.BGN_DT, #{lang}), ' ~ ', 
					FN_GET_BASE_DATE_CHAR(A.END_DT, #{lang})) AS VACANCY_TERM
				, A.JC_AGREE_YN
				, FN_GET_BASE_DATE_TIME(A.REG_DT, 'I', #{lang}) AS REG_DT
				, CASE WHEN A.VACANCY_STS_CD = 'VCS0000000002' THEN 
					FN_GET_BASE_DATE_CHAR(A.VACANCY_CLOSE_DT, #{lang})
				  ELSE '' END AS VACANCY_CLOSE_DT
				, A.VACANCY_STS_CD
				, FN_GET_COMMON_NM('VACANCY_STS_CD', A.VACANCY_STS_CD, #{lang}) AS VACANCY_STS_NM
				, A.RECRUMT_MEMB
				, (SELECT COUNT(*) FROM CPES_APPLIC WHERE VACANCY_SEQ = A.VACANCY_SEQ) AS APPLIC_TOT_CNT
				, (SELECT COUNT(*) FROM CPES_APPLIC WHERE VACANCY_SEQ = A.VACANCY_SEQ AND APPLIC_PROC_CD = 'APC0000000001') AS RESUME_NOT_OPEN_CNT
				, (SELECT COUNT(*) FROM CPES_APPLIC WHERE VACANCY_SEQ = A.VACANCY_SEQ AND APPLIC_PROC_CD = 'APC0000000002') AS RESUME_CHK_CNT
				, (SELECT COUNT(*) FROM CPES_APPLIC WHERE VACANCY_SEQ = A.VACANCY_SEQ AND APPLIC_PROC_CD = 'APC0000000003') AS RESUME_PASS_CNT
				, (SELECT COUNT(*) FROM CPES_APPLIC WHERE VACANCY_SEQ = A.VACANCY_SEQ AND APPLIC_PROC_CD = 'APC0000000004') AS PASS_CNT
				, A.BKMK_CNT
				, A.VIEW_CNT
				, A.REG_DT AS ORDER_BY
				FROM CPES_VACANCY A
				INNER JOIN CPES_COMPNY B
				ON A.COMPNY_SEQ           = B.COMPNY_SEQ
				<where>
					AND A.COMPNY_SEQ				= #{compnySeq}
				</where>
		) TAB
		, (SELECT @ROWNUM := 0) Z
		<choose>
        	<when test="orderColumn == 'REG_DT'">
               	ORDER BY TAB.ORDER_BY ${orderColumnSort}
            </when>
            <otherwise>
            	ORDER BY ${orderColumn} ${orderColumnSort}
            </otherwise>
        </choose>		
		<if test="length > -1">
		LIMIT 
			${start} , ${length}				
		</if>				
    </select>
    
	<select id="selectUserCmpnyDtlInfoVccyListTotalCnt" resultType="java.lang.Integer" parameterType="UserCmpnyVccyBean">
		SELECT 
		COUNT(*) AS TOTAL_COUNT
		FROM CPES_VACANCY A
		INNER JOIN CPES_COMPNY B
		ON A.COMPNY_SEQ           = B.COMPNY_SEQ       
		<where>
			AND A.COMPNY_SEQ				= #{compnySeq}
		</where>
				
    </select>
    
	<select id="selectUserCmpnyCommonVccyList" resultType="UserCmpnyCommonBean" parameterType="UserCmpnyCommonBean">
		SELECT
		TAB.VACANCY_SEQ
		, TAB.VACANCY_TITLE
		FROM (
				SELECT 
				VACANCY_SEQ
				, VACANCY_TITLE
				, YEAR(REG_DT) AS REG_YEAR
				FROM CPES_VACANCY
				WHERE COMPNY_SEQ			= #{compnySeq}
			) TAB
		WHERE REG_YEAR						= #{vacancyYear}
		
    </select>    

	<select id="selectUserCmpnyDtlInfoAplcList" resultType="UserCmpnyAplcBean" parameterType="UserCmpnyAplcBean">
		SELECT
		${totalCount} - ((${pageNo} - 1) * ${length}) - (@ROWNUM := @ROWNUM + 1) + 1 AS ROW_NUM
		, TAB.VACANCY_SEQ
		, TAB.RESUME_SEQ
		, TAB.USER_SEQ
		, TAB.USER_NM
		, TAB.AGE
		, TAB.GENDER_NM
		, TAB.RESUME_TITLE
		, TAB.EDU_DEGREE_CD
		, TAB.EDU_DEGREE_NM
		, TAB.ISCED_CD
		, TAB.ISCED_NM
		, TAB.TOT_CAREER_TERM_YEAR_CNT
		, TAB.TOT_CAREER_TERM_MONTH_CNT
		, TAB.ISCO_CD
		, TAB.ISCO_NM
		, CASE WHEN TAB.APPLIC_PROC_CD != 'APC0000000001' THEN 'Y' ELSE 'N' END AS RESUME_OPEN_YN,
		, TAB.APPLIC_PROC_CD
		, TAB.APPLIC_PROC_NM
		, TAB.VACANCY_TITLE
		, TAB.REG_DT
		, TAB.ORDER_BY
		FROM (
				SELECT
				A.VACANCY_SEQ
				, A.RESUME_SEQ
				, C.USER_SEQ
				, CASE WHEN #{lang} = 'kh' THEN B.CMPLT_USER_NM_KH ELSE B.CMPLT_USER_NM_EN END AS USER_NM
				, FLOOR((CAST(REPLACE(CURRENT_DATE,'-','') AS UNSIGNED) - 
				       		CAST(REPLACE(C.BIRTH,'-','') AS UNSIGNED)) / 10000 ) AS AGE
				, FN_GET_COMMON_NM('GENDER_CD', C.GENDER_CD, #{lang}) AS GENDER_NM       		
				, B.RESUME_TITLE
				, F.EDU_DEGREE_CD
				, FN_GET_COMMON_NM('EDU_DEGREE_CD', F.EDU_DEGREE_CD, #{lang}) AS EDU_DEGREE_NM
				, F.ISCED_CD
				, CASE WHEN #{lang} = 'kh' THEN G.KH_NM ELSE G.EN_NM END AS ISCED_NM
				, B.TOT_CAREER_TERM_YEAR_CNT
				, B.TOT_CAREER_TERM_MONTH_CNT
				, B.ISCO_CD
				, CASE WHEN A.APPLIC_PROC_CD != 'APC0000000001' THEN 'Y' ELSE 'N' END AS RESUME_OPEN_YN,
				, CASE WHEN #{lang} = 'kh' THEN G.KH_NM ELSE G.EN_NM END AS ISCO_NM
				, A.RESUME_OPEN_YN
				, A.APPLIC_PROC_CD
				, FN_GET_COMMON_NM('APPLIC_PROC_CD', A.APPLIC_PROC_CD, #{lang}) AS APPLIC_PROC_NM
				, D.VACANCY_TITLE
				, FN_GET_BASE_DATE_TIME(A.REG_DT, 'I', #{lang}) AS REG_DT
				, A.REG_DT AS ORDER_BY
				FROM CPES_APPLIC A
				INNER JOIN CPES_RESUME B
				ON A.RESUME_SEQ = B.RESUME_SEQ
				INNER JOIN CPES_USER C
				ON B.USER_SEQ = C.USER_SEQ
				INNER JOIN CPES_VACANCY D
				ON A.VACANCY_SEQ = D.VACANCY_SEQ
				INNER JOIN CPES_COMPNY E
				ON D.COMPNY_SEQ = E.COMPNY_SEQ
				LEFT JOIN CPES_ISCO_CD G
				ON B.ISCO_CD = G.ISCO_CD
				LEFT JOIN CPES_RESUME_GENRL_EDU F
				ON B.RESUME_SEQ = F.RESUME_SEQ
				LEFT JOIN CPES_ISCED_CD H
				ON F.ISCED_CD = H.ISCED_CD
				<where>
					<if test="compnySeq != null and compnySeq != ''">
					AND E.COMPNY_SEQ			= #{compnySeq}
					</if>
					<if test="vacancySeq != null and vacancySeq != ''">
					AND A.VACANCY_SEQ			= #{vacancySeq}
					</if>
					<if test="vacancyStsCd != null and vacancyStsCd != ''">
					AND D.VACANCY_STS_CD		= #{vacancyStsCd}
					</if>		
				</where>
		) TAB
		, (SELECT @ROWNUM :=0) Z
		<choose>
			<when test="orderColumn == 'REG_DT'">
				ORDER BY TAB.ORDER_BY ${orderColumnSort}
			</when>
			<otherwise>
				ORDER BY ${orderColumn} ${orderColumnSort}
			</otherwise>
        </choose>		
		<if test="length > -1">
		LIMIT 
			${start} , ${length}				
		</if>				
    </select>
    
	<select id="selectUserCmpnyDtlInfoAplcListTotalCnt" resultType="java.lang.Integer" parameterType="UserCmpnyAplcBean">
		SELECT 
		COUNT(*) AS TOTAL_CNT
		FROM CPES_APPLIC A
		INNER JOIN CPES_RESUME B
		ON A.RESUME_SEQ = B.RESUME_SEQ
		INNER JOIN CPES_USER C
		ON B.USER_SEQ = C.USER_SEQ
		INNER JOIN CPES_VACANCY D
		ON A.VACANCY_SEQ = D.VACANCY_SEQ
		INNER JOIN CPES_COMPNY E
		ON D.COMPNY_SEQ = E.COMPNY_SEQ
		LEFT JOIN CPES_ISCO_CD G
		ON B.ISCO_CD = G.ISCO_CD
		LEFT JOIN CPES_RESUME_GENRL_EDU F
		ON B.RESUME_SEQ 		= F.RESUME_SEQ
		LEFT JOIN CPES_ISCED_CD H
		ON F.ISCED_CD = H.ISCED_CD 
		<where>
			<if test="compnySeq != null and compnySeq != ''">
			AND E.COMPNY_SEQ			= #{compnySeq}
			</if>
			<if test="vacancySeq != null and vacancySeq != ''">
			AND A.VACANCY_SEQ			= #{vacancySeq}
			</if>
			<if test="vacancyStsCd != null and vacancyStsCd != ''">
			AND D.VACANCY_STS_CD		= #{vacancyStsCd}
			</if>
		</where>
				
    </select>
    
	<select id="selectUserCmpnyDtlInfoOfferList" resultType="UserCmpnyOfferBean" parameterType="UserCmpnyOfferBean">
		SELECT
		${totalCount} - ((${pageNo} - 1) * ${length}) - (@ROWNUM := @ROWNUM + 1) + 1 AS ROW_NUM
		, TAB.VACANCY_SEQ
		, TAB.RESUME_SEQ
		, TAB.USER_SEQ
		, TAB.COMPNY_SEQ
		, TAB.USER_NM
		, TAB.AGE
		, TAB.GENDER_NM
		, TAB.RESUME_TITLE
		, TAB.EDU_DEGREE_CD
		, TAB.EDU_DEGREE_NM
		, TAB.ISCED_CD
		, TAB.ISCED_NM
		, TAB.TOT_CAREER_TERM_YEAR_CNT
		, TAB.TOT_CAREER_TERM_MONTH_CNT		
		, TAB.OPEN_YN_NM
		, TAB.APLIC_YN_NM
		, TAB.VACANCY_TITLE
		, TAB.REG_DT
		, TAB.ORDER_BY
		FROM (
				SELECT
				A.VACANCY_SEQ
				, A.RESUME_SEQ
				, C.USER_SEQ
				, E.COMPNY_SEQ
				, CASE WHEN #{lang} = 'kh' THEN B.CMPLT_USER_NM_KH ELSE B.CMPLT_USER_NM_EN END USER_NM
				, FLOOR((CAST(REPLACE(CURRENT_DATE,'-','') AS UNSIGNED) - 
						    CAST(REPLACE(C.BIRTH,'-','') AS UNSIGNED)) / 10000 ) AS AGE
				, FN_GET_COMMON_NM('GENDER_CD', C.GENDER_CD, #{lang}) AS GENDER_NM
				, B.RESUME_TITLE
				, G.EDU_DEGREE_CD
				, FN_GET_COMMON_NM('EDU_DEGREE_CD', G.EDU_DEGREE_CD, #{lang}) AS EDU_DEGREE_NM
				, G.ISCED_CD
				, CASE WHEN #{lang} = 'kh' THEN H.KH_NM ELSE H.EN_NM END AS ISCED_NM
				, B.TOT_CAREER_TERM_YEAR_CNT
				, B.TOT_CAREER_TERM_MONTH_CNT		
				, CASE WHEN A.OFFER_OPEN_YN = 'Y' THEN
				      FN_GET_COMMON_NM('READ_YN_CD', 'RYC0000000001', #{lang})
				  ELSE
				      FN_GET_COMMON_NM('READ_YN_CD', 'RYC0000000002', #{lang})
				  END AS OPEN_YN_NM
				, CASE WHEN I.REG_DT IS NULL OR I.REG_DT = '' THEN 'Y' ELSE 'N' END AS APLIC_YN_NM
				, D.VACANCY_TITLE
				, FN_GET_BASE_DATE_TIME(A.REG_DT, 'I', #{lang}) AS REG_DT
				, A.REG_DT AS ORDER_BY 
				FROM CPES_OFFER A
				INNER JOIN CPES_RESUME B
				ON A.RESUME_SEQ = B.RESUME_SEQ
				INNER JOIN CPES_USER C
				ON B.USER_SEQ = C.USER_SEQ
				INNER JOIN CPES_VACANCY D
				ON A.VACANCY_SEQ = D.VACANCY_SEQ
				INNER JOIN CPES_COMPNY E
				ON D.COMPNY_SEQ = E.COMPNY_SEQ
				LEFT JOIN CPES_ISCO_CD F
				ON B.ISCO_CD = F.ISCO_CD
				LEFT JOIN CPES_RESUME_GENRL_EDU G
				ON B.RESUME_SEQ = G.RESUME_SEQ
				LEFT JOIN CPES_ISCED_CD H
				ON G.ISCED_CD = H.ISCED_CD
				LEFT JOIN CPES_APPLIC I
				ON D.VACANCY_SEQ = I.VACANCY_SEQ
				<where>
					<if test="compnySeq != null and compnySeq != ''">
					AND E.COMPNY_SEQ			= #{compnySeq}
					</if>
					<if test="vacancySeq != null and vacancySeq != ''">
					AND D.VACANCY_SEQ			= #{vacancySeq}
					</if>
					<if test="vacancyStsCd != null and vacancyStsCd != ''">
					AND D.VACANCY_STS_CD		= #{vacancyStsCd}
					</if>		
				</where>
		) TAB
		, (SELECT @ROWNUM :=0) Z
		<choose>
			<when test="orderColumn == 'REG_DT'">
				ORDER BY TAB.ORDER_BY ${orderColumnSort}
			</when>
			<otherwise>
				ORDER BY ${orderColumn} ${orderColumnSort}
			</otherwise>
        </choose>		        		
		<if test="length > -1">
		LIMIT 
			${start} , ${length}				
		</if>				
    </select>
    
	<select id="selectUserCmpnyDtlInfoOfferListTotalCnt" resultType="java.lang.Integer" parameterType="UserCmpnyOfferBean">
		SELECT 
		COUNT(*) AS TOTAL_CNT
		FROM CPES_OFFER A
		INNER JOIN CPES_RESUME B
		ON A.RESUME_SEQ = B.RESUME_SEQ
		INNER JOIN CPES_USER C
		ON B.USER_SEQ = C.USER_SEQ
		INNER JOIN CPES_VACANCY D
		ON A.VACANCY_SEQ = D.VACANCY_SEQ
		INNER JOIN CPES_COMPNY E
		ON D.COMPNY_SEQ = E.COMPNY_SEQ
		LEFT JOIN CPES_ISCO_CD F
		ON B.ISCO_CD = F.ISCO_CD
		LEFT JOIN CPES_RESUME_GENRL_EDU G
		ON B.RESUME_SEQ = G.RESUME_SEQ
		LEFT JOIN CPES_ISCED_CD H
		ON G.ISCED_CD = H.ISCED_CD
		LEFT JOIN CPES_APPLIC I
		ON D.VACANCY_SEQ = I.VACANCY_SEQ
		<where>
			<if test="compnySeq != null and compnySeq != ''">
			AND E.COMPNY_SEQ			= #{compnySeq}
			</if>
			<if test="vacancySeq != null and vacancySeq != ''">
			AND D.VACANCY_SEQ			= #{vacancySeq}
			</if>
			<if test="vacancyStsCd != null and vacancyStsCd != ''">
			AND D.VACANCY_STS_CD		= #{vacancyStsCd}
			</if>		
		</where>
				
    </select>    

 	<select id="selectUserCmpnyDtlInfoIntvwList" resultType="UserCmpnyIntvwBean" parameterType="UserCmpnyIntvwBean">
 		SELECT
 		${totalCount} - ((${pageNo} - 1) * ${length}) - (@ROWNUM := @ROWNUM + 1) + 1 AS ROW_NUM
		, TAB.RESUME_SEQ
		, TAB.VACANCY_SEQ
		, TAB.USER_SEQ
		, TAB.COMPNY_SEQ		
		, TAB.USER_NM
		, TAB.AGE
		, TAB.GENDER_NM
		, TAB.RESUME_TITLE
		, TAB.EDU_DEGREE_CD
		, TAB.EDU_DEGREE_NM
		, TAB.ISCED_CD
		, TAB.ISCED_NM
		, TAB.TOT_CAREER_TERM_YEAR_CNT
		, TAB.TOT_CAREER_TERM_MONTH_CNT
		, TAB.OPEN_YN_NM
		, TAB.INTVW_TYPE_CD
		, TAB.INTVW_TYPE_NM
		, TAB.APPLIC_PROC_CD
		, TAB.APPLIC_PROC_NM
		, TAB.VACANCY_TITLE
		, TAB.REG_DT
		, TAB.ORDER_BY
 		FROM (
 				SELECT 
				C.RESUME_SEQ
				, D.VACANCY_SEQ
				, E.USER_SEQ
				, F.COMPNY_SEQ
				, CASE WHEN #{lang} = 'kh' THEN C.CMPLT_USER_NM_KH ELSE C.CMPLT_USER_NM_EN END USER_NM
				, FLOOR((CAST(REPLACE(CURRENT_DATE,'-','') AS UNSIGNED) - 
				    CAST(REPLACE(E.BIRTH,'-','') AS UNSIGNED)) / 10000 ) AS AGE
				, FN_GET_COMMON_NM('GENDER_CD', E.GENDER_CD, #{lang}) AS GENDER_NM
				, C.RESUME_TITLE
				, H.EDU_DEGREE_CD
				, FN_GET_COMMON_NM('EDU_DEGREE_CD', H.EDU_DEGREE_CD, #{lang}) AS EDU_DEGREE_NM
				, H.ISCED_CD
				, CASE WHEN #{lang} = 'kh' THEN I.KH_NM ELSE I.EN_NM END AS ISCED_NM
				, C.TOT_CAREER_TERM_YEAR_CNT
				, C.TOT_CAREER_TERM_MONTH_CNT
				, CASE WHEN A.INTVW_OPEN_YN = 'Y' THEN
				      FN_GET_COMMON_NM('READ_YN_CD', 'RYC0000000001', #{lang})
				  ELSE
				      FN_GET_COMMON_NM('READ_YN_CD', 'RYC0000000002', #{lang})
				  END AS OPEN_YN_NM
				, A.INTVW_TYPE_CD
				, FN_GET_COMMON_NM('INTVW_TYPE_CD', A.INTVW_TYPE_CD, #{lang}) AS INTVW_TYPE_NM
				, FN_GET_BASE_DATE_CHAR(A.INTVW_OPEN_DT, #{lang}) AS INTVW_OPEN_DT
				, B.APPLIC_PROC_CD
				, FN_GET_COMMON_NM('APPLIC_PROC_CD', B.APPLIC_PROC_CD, #{lang}) AS APPLIC_PROC_NM
				, D.VACANCY_TITLE
				, FN_GET_BASE_DATE_TIME(A.REG_DT, 'I', #{lang}) AS REG_DT
				, A.REG_DT AS ORDER_BY
				FROM CPES_INTVW A
				INNER JOIN CPES_APPLIC B
				ON A.APPLIC_SEQ = B.APPLIC_SEQ
				INNER JOIN CPES_RESUME C
				ON B.RESUME_SEQ = C.RESUME_SEQ
				INNER JOIN CPES_VACANCY D
				ON B.VACANCY_SEQ = D.VACANCY_SEQ
				INNER JOIN CPES_USER E
				ON C.USER_SEQ = E.USER_SEQ
				INNER JOIN CPES_COMPNY F
				ON D.COMPNY_SEQ = F.COMPNY_SEQ
				LEFT JOIN CPES_ISCO_CD G
				ON C.ISCO_CD = G.ISCO_CD
				LEFT JOIN CPES_RESUME_GENRL_EDU H
				ON C.RESUME_SEQ = H.RESUME_SEQ
				LEFT JOIN CPES_ISCED_CD I
				ON H.ISCED_CD = I.ISCED_CD
				<where>
					<if test="compnySeq != null and compnySeq != ''">
					AND F.COMPNY_SEQ			= #{compnySeq}
					</if>
					<if test="vacancySeq != null and vacancySeq != ''">
					AND D.VACANCY_SEQ			= #{vacancySeq}
					</if>
					<if test="vacancyStsCd != null and vacancyStsCd != ''">
					AND D.VACANCY_STS_CD		= #{vacancyStsCd}
					</if>		
				</where>
		) TAB
		, (SELECT @ROWNUM :=0) Z
		<choose>
			<when test="orderColumn == 'REG_DT'">
				ORDER BY TAB.ORDER_BY ${orderColumnSort}
			</when>
			<otherwise>
				ORDER BY ${orderColumn} ${orderColumnSort}
			</otherwise>
        </choose>		
		<if test="length > -1">
		LIMIT 
			${start} , ${length}				
		</if>				
    </select>
    
	<select id="selectUserCmpnyDtlInfoIntvwListTotalCnt" resultType="java.lang.Integer" parameterType="UserCmpnyIntvwBean">
		SELECT 
		COUNT(*) AS TOTAL_CNT
		FROM CPES_INTVW A
		INNER JOIN CPES_APPLIC B
		ON A.APPLIC_SEQ = B.APPLIC_SEQ
		INNER JOIN CPES_RESUME C
		ON B.RESUME_SEQ = C.RESUME_SEQ
		INNER JOIN CPES_VACANCY D
		ON B.VACANCY_SEQ = D.VACANCY_SEQ
		INNER JOIN CPES_USER E
		ON C.USER_SEQ = E.USER_SEQ
		INNER JOIN CPES_COMPNY F
		ON D.COMPNY_SEQ = F.COMPNY_SEQ
		LEFT JOIN CPES_ISCO_CD G
		ON C.ISCO_CD = G.ISCO_CD
		LEFT JOIN CPES_RESUME_GENRL_EDU H
		ON C.RESUME_SEQ = H.RESUME_SEQ
		LEFT JOIN CPES_ISCED_CD I
		ON H.ISCED_CD = I.ISCED_CD
		<where>
			<if test="compnySeq != null and compnySeq != ''">
			AND F.COMPNY_SEQ			= #{compnySeq}
			</if>
			<if test="vacancySeq != null and vacancySeq != ''">
			AND D.VACANCY_SEQ			= #{vacancySeq}
			</if>
			<if test="vacancyStsCd != null and vacancyStsCd != ''">
			AND D.VACANCY_STS_CD		= #{vacancyStsCd}
			</if>		
		</where>
				
    </select>

	<select id="selectUserCmpnyDtlInfoJobfairList" resultType="UserCmpnyFairBean" parameterType="UserCmpnyFairBean">
		SELECT
		${totalCount} - ((${pageNo} - 1) * ${length}) - (@ROWNUM := @ROWNUM + 1) + 1 AS ROW_NUM
		, TAB.FAIR_SEQ
		, TAB.COMPNY_SEQ
		, TAB.VACANCY_SEQ
		, TAB.FAIR_DIV_CD
		, TAB.FAIR_DIV_NM
		, TAB.FAIR_NM
		, TAB.FAIR_TERM
		, TAB.ADDR_CD
		, TAB.ADDR_NM
		, TAB.FAIR_VACANCY_CNT
		, TAB.REG_DT
		, TAB.ORDER_BY
		FROM (
				SELECT
				A.FAIR_SEQ
				, B.COMPNY_SEQ
				, B.VACANCY_SEQ
				, C.FAIR_DIV_CD
				, FN_GET_COMMON_NM('FAIR_DIV_CD', C.FAIR_DIV_CD, #{lang}) AS FAIR_DIV_NM
				, CASE WHEN #{lang} = 'kh' THEN C.FAIR_NM_KH ELSE C.FAIR_NM_EN END AS FAIR_NM
				, CONCAT(FN_GET_BASE_DATE_TIME(C.FAIR_BGN_DT, 'D', #{lang}), ' ~ ', FN_GET_BASE_DATE_TIME(C.FAIR_END_DT, 'D', #{lang})) AS FAIR_TERM
				, C.ADDR_CD
				, CASE WHEN #{lang} = 'kh' THEN E.NM_KH ELSE E.NM_EN END AS ADDR_NM
				, (SELECT COUNT(*) 
				     FROM CPES_FAIR_PATCPTN_COMPNY_VACANCY 
				    WHERE FAIR_SEQ = A.FAIR_SEQ 
				      AND COMPNY_SEQ = B.COMPNY_SEQ) AS FAIR_VACANCY_CNT
				, FN_GET_BASE_DATE_TIME(A.REG_DT, 'I', #{lang}) AS REG_DT
				, A.REG_DT AS ORDER_BY
				FROM CPES_FAIR_PATCPTN_COMPNY A
				INNER JOIN CPES_FAIR_PATCPTN_COMPNY_VACANCY B
				ON A.FAIR_SEQ = B.FAIR_SEQ
				AND A.COMPNY_SEQ = B.COMPNY_SEQ
				INNER JOIN CPES_FAIR_MST C
				ON A.FAIR_SEQ = C.FAIR_SEQ
				INNER JOIN CPES_COMPNY D
				ON B.COMPNY_SEQ = D.COMPNY_SEQ
				LEFT JOIN CPES_LOC_CD E
				ON C.ADDR_CD = E.LVL_CD	
				<where>
					AND B.COMPNY_SEQ	= #{compnySeq}
				</where>			
		) TAB
		, (SELECT @ROWNUM := 0) Z
		<choose>
			<when test="orderColumn == 'REG_DT'">
				ORDER BY TAB.ORDER_BY ${orderColumnSort}
			</when>
			<otherwise>
				ORDER BY ${orderColumn} ${orderColumnSort}
			</otherwise>
        </choose>		
		<if test="length > -1">
		LIMIT 
			${start} , ${length}				
		</if>
						
    </select>
    
	<select id="selectUserCmpnyDtlInfoJobfairListTotalCnt" resultType="java.lang.Integer" parameterType="UserCmpnyFairBean">
		SELECT 
		COUNT(*) AS TOTAL_CNT
		FROM CPES_FAIR_PATCPTN_COMPNY A
		INNER JOIN CPES_FAIR_PATCPTN_COMPNY_VACANCY B
		ON A.FAIR_SEQ = B.FAIR_SEQ
		AND A.COMPNY_SEQ = B.COMPNY_SEQ
		INNER JOIN CPES_FAIR_MST C
		ON A.FAIR_SEQ = C.FAIR_SEQ
		INNER JOIN CPES_COMPNY D
		ON B.COMPNY_SEQ = D.COMPNY_SEQ
		LEFT JOIN CPES_LOC_CD E
		ON C.ADDR_CD = E.LVL_CD	
		<where>
			AND B.COMPNY_SEQ	= #{compnySeq}
		</where>			
    </select> 
                                    
</mapper>
